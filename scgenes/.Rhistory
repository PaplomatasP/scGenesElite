step = 1
)),
column(4,
numericInput(
"np",
"num.pcs",
value = 10,
min = 1,
step = 1
)),
column(4,
div(style = "color:black",
"ScPNMF:", ), ),
column(4,
numericInput(
"gM",
"M Genes #",
value = 300,
min = 1,
step = 1
)),
column(4,
selectInput(
"distMethod",
"distMethod",
c(
"EucDist" = "EucDist",
"KL" = "KL",
"DPNMF" = "DPNMF"
)
)),
column(width = 4,
div(style = "color:black",
"M3Drop:", ), ),
column(
4,
numericInput(
"M3dropthreshold",
"mt_threshold",
value = 0.05,
min = 0.001,
max = 1,
step = 0.01
)
),
column(4,
selectInput(
"M3Method", "mt_method",
c("fdr" = "fdr",
"bon" = "bon")
)),
column(4,
div(style = "color:black",
"SelfE:", ), ),
column(4,
numericInput(
"n",
"# Features",
value = 150,
min = 1,
step = 1
)),
)  ,
),
),
# ---------------P-value tab
tabPanel(
"P-value",
# ---------------sidebarPanel
sidebarPanel(
position = "right",
width = 4,
radioButtons (
"P_method",
"P-Value Methods:",
c(
"Wilcoxon rank sum test" = "Seurat_method",
"Beta-Poisson generalized linear model" = "BPSC_metchod",
"Wald test" = "MAST_method",
"Likelihood Ratio Test" = "DESeq2_method",
"None" = "Empty"
),
selected = "Empty",
),
numericInput(
"PvalueNum",
"P-Value Threshold",
value = 0.05,
min = 0.01,
max = 0.99,
step = 0.01
),
),
),
# ---------------Wrapper Based ML tab
tabPanel(
"Wrapper Based ML",
# ---------------sidebarPanel
sidebarPanel(
position = "right",
width = 4,
selectInput(
"Wrapper_ML_Method",
"Wrapper Machine Learning Methods:",
c(
"Linear Discriminant Analysis" = "lda",
"Lasso and Elastic-Net Regularized Generalized Linear Models" = "glmnet",
"K-nearest neighbors algorithm" = "knn",
"Support Vector Machine-Radial" = "svmRadial",
"None" = "Empty"
),
selected = "Empty",
),
numericInput(
"importanceLimit",
"Significant Threshold",
value = 30,
min = 0,
max = 100,
step = 1
),
) ,
),
# ---------------Tree Based ML Tab
tabPanel(
"Tree Based ML",
# ---------------sidebarPanel
sidebarPanel(
position = "right",
width = 4,
selectInput(
"ML_Method",
"Tree Based Machine Learning Methods:",
c(
"Random Forest Algorithm" = "rf",
"eXtreme Gradient Boosting" = "xgbTree",
"AdaBoost Classification Trees" = "adaboost",
"Bagged CART" = "treebag",
"Recursive Partitioning and Regression Trees" = "rpart",
"C5.0 Decision Trees and Rule-Based Models" = "C5.0",
"None" = "Empty"
),
selected = "Empty",
),
numericInput(
"importanceLimit",
"Significant Threshold",
value = 30,
min = 0,
max = 100,
step = 1
),
) ,
),
# ---------------Ensemble Approach  Tab
tabPanel(
"Ensemble Approach",
# ---------------sidebarPanel
sidebarPanel(
position = "right",
width = 4,
radioButtons(
'ensembleVar',
label    = "Variable Genes Methods:",
choices = list(
"SCMarker"       = "SCMarker",
"DUBStepR"       = "DUBStepR",
"ScPNMF"         =  "ScPNMF",
"M3Drop"          = "M3Drop" ,
"SelfE"          = "SelfE" ,
"None" = "NoMethod"
),
selected = "NoMethod"
),
radioButtons(
'ensemblePvalue',
label    = "P-value Methods:",
choices = list(
"Wilcoxon rank sum test" = "Seurat_method",
"Beta-Poisson generalized linear model" = "BPSC_metchod",
"Wald test" = "MAST_method",
"Likelihood Ratio Test" = "DESeq2_method",
"None" = "NoMethod"
),
selected = "NoMethod"
),
radioButtons(
'ensembleWrapper',
label    = "Wrapper Based Methods:",
choices = list(
"Random Forest Algorithm" = "rf",
"eXtreme Gradient Boosting" = "xgbTree",
"AdaBoost Classification Trees" = "adaboost",
"Bagged CART" = "treebag",
"Recursive Partitioning and Regression Trees" = "rpart",
"C5.0 Decision Trees and Rule-Based Models" = "C5.0",
"None" = "NoMethod"
),
selected = "NoMethod"
),
radioButtons(
'ensembleMLBased',
label    = "ML Based Methods:",
choices = list(
"Linear Discriminant Analysis" = "lda",
"Lasso and Elastic-Net Regularized Generalized Linear Models" = "glmnet",
"K-nearest neighbors algorithm" = "knn",
"Support Vector Machine-Radial" = "svmRadial",
"None" = "NoMethod"
),
selected = "NoMethod"
),
) ,
),
),
# -----------   Main panel for displaying outputs
mainPanel(tableOutput("text")),
# -----------   sidebarPanel
sidebarPanel(
position = "right",
width = 8,
sidebarLayout(
column(
12,
sliderInput(
"genes",
"Number of genes:",
min = 2,
max = 300,
value = 100
),
),
column(
12,
checkboxInput("HeatMap1", "Heatmap🔥", value = FALSE),
column(
width = 2,
radioButtons(
"clustering",
"Heatmap Clustering:",
choices = c("Between Groups" = "cluster_between_groups",
"None" = "None_Clustering"),
selected = "None_Clustering",
inline = TRUE
)
),
column(
width = 2,
radioButtons(
"Split",
"Heatmap Splitting:",
choices = c("Cell Type" = "CellType",
"State" = "labels"),
selected = "CellType",
inline = TRUE
)
),
),
),
column(12,
mainPanel(
tableOutput("error"),
splitLayout(
cellWidths = 880,
tags$div(
plotOutput("TheBarPlot"),
width = "100%",
height = "400",
style = "margin-top: 40px;"
),
# margin-left: 100px;
tags$div(tableOutput("GenesList"), style = "margin-top: 18px; height: 40vh; width: 48vh;  overflow-x: hide;
overflow-y: scroll; "),
),
), ),
column(12,
mainPanel(
splitLayout(
cellWidths = 950,
tags$div(
plotOutput("KnnClassifier"),
width = "100%",
height = "400",
style = "margin-top: 20px;"
),
),
), ),
column(12,
mainPanel(
splitLayout(
cellWidths = 1000,
tags$div(
plotOutput("HeatMap"),
width = "100%",
height = "400",
style = "margin-top: 40px;"
),
# margin-left: 100px;
tags$div(tableOutput("HeatmapList"), style = "margin-top: 18px; height: 45vh; width: 30vh;  overflow-x: hide;
overflow-y: scroll; "),
),
), ),
),
),
# -----------   Enrichment Analysis Tab
tabPanel (
title = tags$h3("Enrichment Analysis"),
#Info Button
dropMenu(
dropdownButton(
"Info",
status = 'info',
size = "xs",
icon = icon('info'),
width = 500
),
h3(strong('Information')),
br(),
h5(
'In this section, the user is provided with the capability to investigate the potential biomarkers that have been identified through previous analysis. The user has the option to select either the entire set of isolated genes or a specific subset of genes. For example, if the user selects 50 genes, the top 50 genes with the highest scores will be selected for further analysis. Additionally, the user has the option to select from 18 different Pathways Datasets, which are divided into three distinct categories: Biological Pathway, Biological Ontologies, and Diseases-Drugs. The user can choose to analyze a specific pathway, a combination of three ontology terms, or all available ontology terms. The Enrichr database is utilized to perform this analysis.  '
),
placement = "bottom-start",
arrow = TRUE,
theme = "material",
maxWidth = 1000
),
fluidRow(
# -----------   sidebarPanel
sidebarPanel(
position = "right",
width = 12,
sliderInput(
"genes1",
"Select the number of genes for the enrichment analysis:",
min = 10,
max = 9000,
value = 50,
step = 1
),
column(
3,
(""),
checkboxInput("all", "All Available Ontology Terms", value = FALSE)
),
column(3,
selectInput(
"BP",
"Biological Pathway",
c(
"-",
"KEGG 2021 Human" = "KEGG_2021_Human",
"WikiPathway 2021 Human" = "WikiPathway_2021_Human",
"BioPlanet 2019" = "BioPlanet_2019",
"BioCarta 2016" = "BioCarta_2016",
"MSigDB Hallmark 2020" = "MSigDB_Hallmark_2020",
"Reactome 2016" = "Reactome_2016"
)
)),
column(3,
selectInput(
"BO",
"Biological Ontologies",
c(
"-",
"GO Biological Process 2021" = "GO_Biological_Process_2021",
"GO Molecular Function 2021" = "GO_Molecular_Function_2021",
"GO Cellular Component 2021" = "GO_Cellular_Component_2021",
"MGI Mammalian Phenotype Level 4 2021" = "MGI_Mammalian_Phenotype_Level_4_2021",
"Human Phenotype Ontology" = "Human_Phenotype_Ontology",
"Jensen_DISEASES" = "Jensen_DISEASES"
)
)),
column(3,
selectInput(
"DD",
"Diseases-Drugs",
c(
"-",
"DisGeNET" = "DisGeNET",
"DSigDB" = "DSigDB",
"DrugMatrix" = "DrugMatrix",
"OMIM Disease" = "OMIM_Disease",
"HDSigDB Human 2021" = "HDSigDB_Human_2021",
"COVID-19 Related Gene_Sets 2021" = "COVID-19_Related_Gene_Sets_2021"
)
)),
column(3,
actionButton("click1", "Enrichment Analysis ")),
column(
7,
useShinyjs(),
downloadButton("GP", "Export Plots"),
downloadButton("GT", "Export Tables"),
),
br(),
fluidRow(sidebarPanel(mainPanel(
plotOutput("BioBarPlot", width = "510%", height = "1300"),
tableOutput('Enrichment'),
), ))
)
)
)
,
# -----------   KEGG Tab
tabPanel(
tags$h3("KEGG Maps"),
value = 1,
dropMenu(
dropdownButton(
"Info",
status = 'info',
size = "xs",
icon = icon('info')
),
h3(strong('Information')),
br(),
h5(
'In this tab, the user is presented with the capability to visualize the KEGG Pathway Maps, which provide a holistic understanding of the functional and structural aspects of the biological system under investigation. This is achieved by mapping the isolated genes onto the KEGG Pathway Maps. The user is provided with a data frame containing the pathway identifiers, and can simply copy the desired identifier and press the "go" button to initiate the visualization process. It is important to note that the correct organism must be selected in the first tab prior to utilizing this feature, as the KEGG Pathway Maps are organism-specific.'
),
placement = "bottom-start",
arrow = TRUE,
theme = "material",
maxWidth = 1000
),
# -----------   sidebarLayout
sidebarLayout(
# -------------- sidebarPanel
sidebarPanel(
h5("Give ID of KEGG pathways"),
textInput("inText", "Pathway iD"),
column(
1,
offset = 2,
actionButton("click2", "  Go  ",
style = "position: absolute; right: -130px; bottom: -72px")
),
),
# Main panel for displaying outputs ----
mainPanel(
dataTableOutput("KEGG"),
textOutput ("text1"),
sidebarPanel(
position = "left",
width = 12,
plotOutput("KEGGmap", width = "150%",height = 800) ,#, width = "100%", height = 500
)
)
)
),
# ----- Graphs Network Tab
tabPanel(
title = tags$h3("Graph Analysis"),
dropMenu(
dropdownButton(
"Info",
status = 'info',
size = "xs",
icon = icon('info')
),
h3(strong('Information')),
br(),
h5(
'On the final tab, the user is provided with the capability to perform protein-protein interaction (PPI) network analysis and similarity graph analysis. The user can specify a threshold for the PPI network, which ensures that only interactions with a combined score greater than the specified threshold are included in the network. The PPI network is based on the STRINGdb database, which is a widely used database for protein-protein interactions. The similarity graph feature allows the user to discover molecular modules in genetic networks by measuring the similarity between the profiles of gene interactions in a cell. A pearson correlation threshold is available for this analysis, allowing the user to adjust the level of similarity required for two genes to be considered as similar.'
),
placement = "bottom-start",
arrow = TRUE,
theme = "material",
maxWidth = 1000
),
sidebarPanel(
width = 4,
checkboxInput(
"PPInetwork1",
"Protein–protein interaction (PPI) network analysis ️🕸",
value = FALSE
),
numericInput(
"Score_Threshold_PPI",
"Conditionally load interactions based on a threshold.",
value = 400,
min = 50,
max = 1000,
step = 10
),
checkboxInput("graph1", "Similarity Graph 📊", value = FALSE),
numericInput(
"Pearson_correlation",
" Remove edges below absolute Pearson correlation",
value = 0.5,
min = 0.1,
max = 0.99,
step = 0.1
),
column(
width = 4,
actionButton("run_button1", "Plotting Graphs", style = "position: absolute; right: -145px; bottom: -72px")
),
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("text3"),
column(
width = 3,
plotOutput("PPInetwork", width = "400%", height = "800"),
visNetworkOutput("graph", width = "400%", height = "800")
)
)
),
)
runApp()
shiny::runApp()
runApp()
